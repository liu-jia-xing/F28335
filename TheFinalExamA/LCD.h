/*
 * LCD.h
 *
 *  Created on: 2019年6月3日
 *      Author: ToFFF
 */

#ifndef LCD_H_
#define LCD_H_

// 宏定义
#define uchar unsigned char

#define  BASIC_SET      0x30           //基本指令集  00110000
#define  EXTEND_SET     0x34           //扩展指令集  00110100
#define  DRAW_ON        0x36           //绘图显示开  00110110
#define  DRAW_OFF       0x34           //绘图显示关  00110100
#define  DISP_ON        0x0F           //显示ON,游标ON,游标位反白ON 00001111

#define  execute_72us   delay_loopN(400)     //执行时间
#define  SCLK_quarter   delay_loopN(40)       //四分之一SCLK时钟 SCLK是LCD串行通信时钟
#define  SCLK_half      delay_loopN(80)       //二分之一SCLK时钟 SCLK是LCD串行通信时钟

#define CS_1        GpioDataRegs.GPADAT.bit.GPIO5=1             //GPIO5作为CS
#define CS_0        GpioDataRegs.GPADAT.bit.GPIO5=0             //GPIO5作为CS

#define SCLK_1      GpioDataRegs.GPADAT.bit.GPIO4=1             //GPIO4作为SCLK
#define SCLK_0      GpioDataRegs.GPADAT.bit.GPIO4=0             //GPIO4作为SCLK

#define SDATA_OUT   GpioCtrlRegs.GPADIR.bit.GPIO2=1             //GPIO2作为SDATA
#define SDATA_IN    GpioCtrlRegs.GPADIR.bit.GPIO2=0             //GPIO2作为SDATA
#define SDATA       GpioDataRegs.GPADAT.bit.GPIO2

#define RST_1       GpioDataRegs.GPADAT.bit.GPIO3=1             //GPIO3做RST
#define RST_0       GpioDataRegs.GPADAT.bit.GPIO3=0             //GPIO3做RST

// 函数声明：
// 函数名称    ：InitLcdGpio：设置GPIO2/3/4/5引脚为输出引脚，连接到作LCD。
void InitLcdGpio(void);

// 函数名称    ：InitLcdFun：初始化LCD接口功能
void InitLcdFun( void );

// 函数名称    ：ReadByte：从LCD读一个8bit数据，结果放在data（生成传输波形，这里的数据不考虑是命令还是显示数据）
Uint16 ReadByte(void);

// 函数名称    ：WriteByte：写一个8bit数据到LCD（生成传输波形，这里的数据不考虑是命令还是显示数据）
void WriteByte(Uint16 x);


// 函数名称    ：WriteLcdCmd: 写一个8bit命令到LCD
void WriteLcdCmd(Uint16 data) ;

// 函数名称    ：WriteLcdData: 写8位数据到LCD，本函数不考虑发送地址
// 输入：Uint16 data：8位数据，
void WriteLcdData(Uint16 data);

// 函数名称    ：ReadLcdData
Uint16 ReadLcdData(void);

// 函数名称    ：LcdClearTxt
// 功能描述    ：清除全部字符，光标回到（0,0）处，（用空白字符填充文本区）
void LcdClearTxt( void );

// 函数名称    ：LcdClearBmp
// 功能描述    ：图形区清RAM函数
void LcdClearBmp( void );

// 函数名称    ：DispCHN:显示汉字串
// 显示起始位置：
// uchar row：行号：0-3
// uchar col：列号：0-7
// 字符指针：uchar *puts
// 字符数：uchar nums，不超过32个
void DispCHN(uchar row,uchar col,uchar *puts,Uint16 nums);

/******************************************************************************************
* 函数名称    ：DispENG:显示英语字符或数字串
* 显示起始位置：
* uchar row：行号：0-3
* uchar col：列号：0-7
* 字符指针：uchar *puts
* 字符数：uchar nums，不超过64个，奇数个字符时，自动加一个空格
******************************************************************************************/
void DispENG(uchar row,uchar col,uchar *puts,Uint16 nums);

/******************************************************************************************
* 底层函数，在DispFig中调用
* 函数名称：disp_figdata:在指定位置显示一个字的像素，数据横排，位顺序左高右低，1表示亮
* uchar,row：指定起始行，0~63
* uchar,col：指定起始列，0~7
*******************************************************************************************/
void DispFigData(uchar  row, uchar  col, uchar  *figdata);


/******************************************************************************************
* 函数名称    ：DispFig:显示128x64图片，横向取模，字节正序，16位数据格式（数据横排，8个像素对应一个字节，位顺序左高右低）
*         亮暗方式：0x55的图形为：0101  0101，0表示暗，1表示亮。
******************************************************************************************/
void DispFig(uchar *fig);

/******************************************************************************************
* 函数名称    ：DispFigTest:按顺序产生16位点阵数据，放在fig[]中，并显示。
* fig[]为64行、8列，每个数据16位，共512单元
* 显示128x64图片，横向取模，字节正序，16位数据格式
******************************************************************************************/
void DispFigTest(void);

/******************************************************************************************
* 函数名称    ：DispFig:显示128x64图片，横向取模，字节正序，16位数据格式,上下屏数据结构
******************************************************************************************/
void DispFigUd(uchar *fig);

/******************************************************************************************
* 函数名称    ：DispFig8:显示128x64图片，横向取模，字节正序，8位数据格式
* （数据横排，8个像素对应一个字节，位顺序左高右低）
*         亮暗方式：0x55的图形为：0101  0101，0表示暗，1表示亮。
******************************************************************************************/
void DispFig8(uchar *fig);


/******************************************************************************************
* 底层函数，产生点像素编码，并贴加在fig[]上
* uchar,row：指定起始行，0~63
* uchar,col：指定起始列，0~127
*******************************************************************************************/
void GetDotData(uchar row, uchar col);


/******************************************************************************************
* 将贴加在fig[]上一个点像素显示LCD上
* uchar,row：指定起始行，0~63
* uchar,col：指定起始列，0~127
*******************************************************************************************/
void DispDot(uchar row, uchar col,uchar *fig);


/******************************************************************************************
* 底层函数，产生点像素编码，并贴加在fig[]上
* uchar,row：指定起始行，0~63
* uchar,col：指定起始列，0~127
*******************************************************************************************/
void GetLineData(uchar *start, uchar *end);


/******************************************************************************************
* 将贴加在fig[]上一条线像素显示LCD上
* uchar,row：指定起始行，0~63
* uchar,col：指定起始列，0~127
*******************************************************************************************/
void DispLine(uchar *start, uchar *end, uchar *fig);

/******************************************************************************************
* 清除fig[]数据
*******************************************************************************************/
void ClearFigBack(void);

/******************************************************************************************
* 函数功能：在指定起始位置显示一段像素（pixels,dots），数据横排，位顺序左高右低，1表示亮
* uchar,row：指定起始行，0~63
* uchar,col：指定起始列，0~7
* uchar,*figdata:数据指针
* Uint16,nums：数据个数，最多64*16=1024个。
*******************************************************************************************/
void DispDots(uchar row,uchar col,uchar *figdata,Uint16 nums);


/******************************************************************************************
* 函数名称    ：Delay，时间单位：ms
******************************************************************************************/
void Delay(Uint16 MS);

/******************************************************************************************
* 函数名称    ：LcdDelay：按键延迟函数：时间待定
******************************************************************************************/
void LcdDelay(Uint16 Second , Uint16 MS100);
/******************************************************************************************
* 函数名称    ：delay_loop
******************************************************************************************/
void delay_loopN(Uint32 x);

/******************************************************************************************/

#endif /* LCD_H_ */
